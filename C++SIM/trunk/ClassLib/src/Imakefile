COMMENT
COMMENT Copyright 1990-2008, Mark Little, University of Newcastle upon Tyne
COMMENT and others contributors as indicated 
COMMENT by the @authors tag. All rights reserved. 
COMMENT See the copyright.txt in the distribution for a
COMMENT full listing of individual contributors. 
COMMENT This copyrighted material is made available to anyone wishing to use,
COMMENT modify, copy, or redistribute it subject to the terms and conditions
COMMENT of the GNU Lesser General Public License, v. 2.1.
COMMENT This program is distributed in the hope that it will be useful, but WITHOUT A 
COMMENT WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
COMMENT PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
COMMENT You should have received a copy of the GNU Lesser General Public License,
COMMENT v.2.1 along with this distribution; if not, write to the Free Software
COMMENT Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
COMMENT MA  02110-1301, USA.
COMMENT 
COMMENT (C) 1990-2008,
COMMENT
COMMENT
COMMENT Copyright (C) 1994
COMMENT
COMMENT Department of Computing Science,
COMMENT The University,
COMMENT Newcastle upon Tyne,
COMMENT UK.
COMMENT
COMMENT $Id: Imakefile,v 1.17 1998/07/31 08:50:26 nmcl Exp $
COMMENT

LIB	= $(LIBCPPSIM)

SOURCES = Process.cc \
	  Random.cc \
	  thread.cc \
	  ProcessList.cc \
	  ProcessCons.cc \
	  ProcessIterator.cc

OBJECTS = Process.o \
	  Random.o \
	  thread.o \
	  ProcessList.o \
	  ProcessCons.o \
	  ProcessIterator.o

#ifdef ProcessHeap_Queue
Q_SOURCES = ProcessHeap.cc \
	    HeapElement.cc \
	    HeapIterator.cc

Q_OBJECTS = ProcessHeap.o \
	    HeapElement.o \
	    HeapIterator.o
#else
#ifdef HashedList_Queue
Q_SOURCES = HashedList.cc \
	    HashIterator.cc

Q_OBJECTS = HashedList.o \
	    HashIterator.o
#else
Q_SOURCES = 

Q_OBJECTS = 
#endif
#endif

#if defined(BUILD_CALENDAR) || defined(BUILD_QUICKTHREAD)
SetLocalCppFlags(-I$(ARJUNA_INCLUDES) -I../include -I../../Contrib)
#else
SetLocalCppFlags(-I$(ARJUNA_INCLUDES) -I../include)
#endif

AllTarget($(LIB))

#ifdef LWP_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) lwp_thread.o)
#endif
#ifdef REX_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) rex_thread.o)
#endif
#ifdef CPP_TASK
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) cpp_task.o)
#endif
#ifdef SOLARIS_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) solaris_thread.o)
#endif
#ifdef POSIX_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) posix_thread.o)
#endif
#ifdef C_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS) c_thread.o)
#endif
#ifdef QUICK_THREAD
MakeLibrary($(LIB),$(OBJECTS) $(Q_OBJECTS))
#endif

MakeObjectCPLUSPLUS(Process,NOPARAM)
MakeObjectCPLUSPLUS(Random,NOPARAM)
MakeObjectCPLUSPLUS(thread,NOPARAM)
MakeObjectCPLUSPLUS(ProcessCons,NOPARAM)
MakeObjectCPLUSPLUS(ProcessIterator,NOPARAM)
MakeObjectCPLUSPLUS(ProcessList,NOPARAM)

#ifdef ProcessHeap_Queue
MakeObjectCPLUSPLUS(HeapElement,NOPARAM)
MakeObjectCPLUSPLUS(HeapIterator,NOPARAM)
MakeObjectCPLUSPLUS(ProcessHeap,NOPARAM)
#endif
#ifdef HashedList_Queue
MakeObjectCPLUSPLUS(HashedList,NOPARAM)
MakeObjectCPLUSPLUS(HashIterator,NOPARAM)
#endif

#ifdef LWP_THREAD
MakeObjectCPLUSPLUS(lwp_thread,NOPARAM)
#endif
#ifdef REX_THREAD
MakeObjectCPLUSPLUS(rex_thread,NOPARAM)
#endif
#ifdef CPP_TASK
MakeObjectCPLUSPLUS(cpp_task,NOPARAM)
#endif
#ifdef SOLARIS_THREAD
MakeObjectCPLUSPLUS(solaris_thread,NOPARAM)
#endif
#ifdef POSIX_THREAD
MakeObjectCPLUSPLUS(posix_thread,NOPARAM)
#endif
#ifdef C_THREAD
MakeObjectCPLUSPLUS(c_thread,NOPARAM)
#endif

#ifdef LWP_THREAD
TidyTarget($(Q_OBJECTS) lwp_thread.o)
#endif
#ifdef REX_THREAD
TidyTarget($(Q_OBJECTS) rex_thread.o)
#endif
#ifdef CPP_TASK
TidyTarget($(Q_OBJECTS) cpp_task.o)
#endif
#ifdef SOLARIS_THREAD
TidyTarget($(Q_OBJECTS) solaris_thread.o)
#endif
#ifdef POSIX_THREAD
TidyTarget($(Q_OBJECTS) posix_thread.o)
#endif
#ifdef C_THREAD
TidyTarget($(Q_OBJECTS) c_thread.o)
#endif
