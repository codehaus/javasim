/*
 * Copyright 1990-2008, Mark Little, University of Newcastle upon Tyne
 * and others contributors as indicated 
 * by the @authors tag. All rights reserved. 
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors. 
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
 * MA  02110-1301, USA.
 * 
 * (C) 1990-2008,
 */
 /*
 * Copyright (C) 1994
 *
 * Department of Computing Science,
 * The University,
 * Newcastle upon Tyne,
 * UK.
 */

#if defined(NO_INLINES) && !defined(ERROR_CC_)

extern ostream& operator<< (ostream&, ErrorSeverity);

#else

#ifndef NO_INLINES
#  define INLINEF inline
#else
#  define INLINEF
#endif

#include <iostream.h>
#include <stdlib.h>

#ifndef WIN32
#  include <sys/types.h>
#  include <unistd.h>
#else
#  include <process.h>
#endif

#include <iostream.h>

INLINEF ostream& operator<< ( ostream& strm, ErrorSeverity es )
{
    strm << (es == FATAL ? "\007FATAL ERROR" : "WARNING");
    strm << "(process id : " << getpid() << ") : ";
    
    return strm;
}

#ifdef INLINEF
#  undef INLINEF
#endif

#endif
